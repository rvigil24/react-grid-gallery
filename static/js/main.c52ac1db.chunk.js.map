{"version":3,"sources":["data.js","components/Image.jsx","components/ProfileImage.jsx","components/UserGrid.jsx","pages/Gallery.jsx","components/PostGrid.jsx","components/Modal.jsx","routes.jsx","App.jsx","index.js"],"names":["IMAGES","id","title","Image","styled","div","index","inModal","css","ProfileImage","mini","UserStyledGrid","Photo","Name","Label","Description","UserGrid","MiniUserGrid","PhotoGrid","cascade","LinkGridStyled","TabLinkStyled","Link","selected","ImageLink","Gallery","location","useLocation","url","useRouteMatch","galleryCascade","search","to","pathname","map","i","state","background","PostGridStyled","InfoGridStyled","OverFlowHidden","createGlobalStyle","ModalStyled","top","Modal","history","useHistory","useParams","image","parseInt","onClick","e","stopPropagation","goBack","style","position","left","bottom","right","height","window","scrollY","innerHeight","Routes","path","children","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c52ac1db.chunk.js","sourcesContent":["export const IMAGES = [\r\n    { id: 1, title: \"A coffee cup\" },\r\n    { id: 2, title: \"Manhattan Center\" },\r\n    { id: 3, title: \"Girl laughing\" },\r\n    { id: 4, title: \"Cup of flowers\" },\r\n    { id: 5, title: \"Nice boat\" },\r\n    { id: 6, title: \"Delicious breakfast\" },\r\n    { id: 7, title: \"Delicious salad\" },\r\n    { id: 8, title: \"Dog coding\" },\r\n    { id: 9, title: \"Flowers!\" },\r\n    { id: 10, title: \"Ballon head\" },\r\n    { id: 11, title: \"More flowers\" },\r\n    { id: 12, title: \"Cactus\" }\r\n  ];","import styled, { css } from \"styled-components\";\r\n\r\nconst Image = styled.div`\r\n  width: 305px;\r\n  height: 305px;\r\n  background: no-repeat center/150% url(/img/${({ index }) => index}.jpg);\r\n  ${({ inModal }) =>\r\n    !inModal &&\r\n    css`\r\n      :hover {\r\n        opacity: 0.7;\r\n      }\r\n    `}\r\n  @media (max-width: 990px){\r\n    background: no-repeat center url(/img/${({ index }) => index}.jpg);\r\n    background-size: contain;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const ProfileImage = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  background: no-repeat center/170% url(/img/2.jpg);\r\n  border-radius: 100px;\r\n  margin: 40px;\r\n  ${({ mini }) =>\r\n    mini &&\r\n    css`\r\n      width: 50px;\r\n      height: 50px;\r\n      margin: 5px;\r\n      @media (max-width: 990px) {\r\n        margin: 5px;\r\n        width: 50px;\r\n        height: 50px;\r\n        border-radius: 50px;\r\n      }\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { ProfileImage } from \"./ProfileImage\";\r\n\r\nconst UserStyledGrid = styled.div`\r\n  margin-top: 80px;\r\n  margin-bottom: 50px;\r\n  display: grid;\r\n  justify-content: center;\r\n  grid-template-areas:\r\n    \"photo name\"\r\n    \"photo label\"\r\n    \"photo description\";\r\n  gap: 15px;\r\n\r\n  @media (max-width: 990px) {\r\n    grid-template-areas:\r\n      \"photo name\" \"label .\"\r\n      \"description .\";\r\n    \r\n  }\r\n`;\r\n\r\nconst Photo = styled.div`\r\n  grid-area: photo;\r\n`;\r\nconst Name = styled.div`\r\n  grid-area: name;\r\n  font-size: 35px;\r\n  align-self: center;\r\n  @media (max-width: 990px) {\r\n    font-size: 25px;\r\n    text-align: left;\r\n  }\r\n`;\r\nconst Label = styled.div`\r\n  grid-area: label;\r\n  @media (max-width: 990px) {\r\n    padding-left: 25px;\r\n  }\r\n`;\r\nconst Description = styled.div`\r\n  grid-area: description;\r\n  max-width: 400px;\r\n  @media (max-width: 990px) {\r\n    grid-column: 1 / 3;\r\n    max-width: 90%;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const UserGrid = () => {\r\n  return (\r\n    <UserStyledGrid>\r\n      <Photo>\r\n        <ProfileImage />\r\n      </Photo>\r\n      <Name>React GridGallery</Name>\r\n      <Label>\r\n        <strong>500</strong> Followers\r\n      </Label>\r\n      <Description>\r\n        My name is Ruben Vigil, I'm a developer and welcome to React\r\n        GridGallery. This is a gallery made with React, React-Router and styled\r\n        components. ðŸ’»ðŸ‘¨\r\n      </Description>\r\n    </UserStyledGrid>\r\n  );\r\n};\r\n\r\nexport const MiniUserGrid = styled.div`\r\n  display: grid;\r\n  justify-content: left;\r\n  align-items: center;\r\n  grid-template-columns: auto auto;\r\n  gap: 10px;\r\n`;\r\n","import { useLocation, Link, useRouteMatch } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport LazyLoad from \"react-lazyload\";\r\n\r\n//data\r\nimport { IMAGES } from \"../data\";\r\n\r\n//components\r\nimport Image from \"../components/Image\";\r\nimport { UserGrid } from \"../components/UserGrid\";\r\n\r\nconst PhotoGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 305px);\r\n  justify-content: center;\r\n  grid-auto-rows: 305px;\r\n  gap: 15px;\r\n  ${({ cascade }) =>\r\n    cascade &&\r\n    css`\r\n      grid-auto-rows: 200px;\r\n      grid-gap: 5px;\r\n    `}\r\n  @media (max-width: 990px) {\r\n    gap: 5px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-auto-rows: calc(33vw);\r\n  }\r\n`;\r\n\r\nconst LinkGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TabLinkStyled = styled(Link)`\r\n  text-decoration: none;\r\n  color: #ccc;\r\n  text-transform: uppercase;\r\n  letter-spacing: 3px;\r\n  ${({ selected }) => selected && \"color: black\"}\r\n`;\r\n\r\nconst ImageLink = styled(Link)`\r\n  background: no-repeat center/150% url(/img/${({ index }) => index}.jpg);\r\n  background-size: cover;\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n  ${({ cascade }) =>\r\n    cascade &&\r\n    css`\r\n      &:nth-of-type(2n) {\r\n        grid-row-start: span 2;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst Gallery = () => {\r\n  const location = useLocation();\r\n  const { url } = useRouteMatch();\r\n\r\n  const galleryCascade = location.search === \"?type=cascade\";\r\n\r\n  return (\r\n    <div>\r\n      <UserGrid />\r\n      <LinkGridStyled>\r\n        <TabLinkStyled selected={!galleryCascade} to={`${url}`}>\r\n          square\r\n        </TabLinkStyled>\r\n        <TabLinkStyled\r\n          selected={galleryCascade}\r\n          to={{ pathname: `${url}`, search: \"?type=cascade\" }}\r\n        >\r\n          cascade\r\n        </TabLinkStyled>\r\n      </LinkGridStyled>\r\n      <PhotoGrid cascade={galleryCascade}>\r\n        {IMAGES.map((i) => (\r\n          <ImageLink\r\n            cascade={galleryCascade}\r\n            key={i.id}\r\n            to={{\r\n              pathname: `/img/${i.id}`,\r\n              state: { background: location },\r\n            }}\r\n            index={i.id}\r\n          />\r\n        ))}\r\n      </PhotoGrid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const PostGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  @media (max-width: 990px){\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const InfoGridStyled = styled.div`\r\n  padding: 5px;\r\n  display: grid;\r\n  grid-template-rows: 90px auto 40px;\r\n`;\r\n\r\n","import { useHistory, useParams } from \"react-router-dom\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\n//data\r\nimport { IMAGES } from \"../data\";\r\n\r\n//components\r\nimport Image from \"./Image\";\r\nimport { PostGridStyled, InfoGridStyled } from \"./PostGrid\";\r\nimport { MiniUserGrid } from \"./UserGrid\";\r\nimport { ProfileImage } from \"./ProfileImage\";\r\n\r\n//styled components\r\nconst OverFlowHidden = createGlobalStyle`\r\n  body {\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst ModalStyled = styled.div`\r\n  position: absolute;\r\n  background: #fff;\r\n  top: ${({ top }) => {\r\n    return top;\r\n  }}px;\r\n  left: 25%;\r\n  right: 25%;\r\n  border: 2px solid #444;\r\n  @media (max-width: 990px){\r\n    left: 0;\r\n    right: 0;\r\n    width: auto;\r\n    top: ${({ top }) => {\r\n    return top;\r\n  }}px;\r\n  }\r\n`;\r\n\r\nconst Modal = () => {\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  let image = IMAGES[parseInt(id, 10) - 1];\r\n\r\n  if (!image) return null;\r\n\r\n  let back = (e) => {\r\n    e.stopPropagation();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={back}\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        height: \"5000px\",\r\n        background: \"rgba(0, 0, 0, 0.75)\",\r\n      }}\r\n    >\r\n      <ModalStyled top={window.scrollY + window.innerHeight / 2 - 250}>\r\n        <PostGridStyled>\r\n          <Image inModal index={image.id} />\r\n          <InfoGridStyled>\r\n            <MiniUserGrid>\r\n              <ProfileImage mini />\r\n              <h4>Grid Gallery</h4>\r\n            </MiniUserGrid>\r\n            <h3>{image.title}</h3>\r\n            <div>Comments</div>\r\n            <div>45 Likes</div>\r\n          </InfoGridStyled>\r\n          <OverFlowHidden />\r\n        </PostGridStyled>\r\n      </ModalStyled>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { Switch, Route, useLocation } from \"react-router-dom\";\r\n\r\n//pages\r\nimport Gallery from \"./pages/Gallery\";\r\nimport Modal from \"./components/Modal\";\r\n\r\nconst Routes = () => {\r\n  let location = useLocation();\r\n  let background = location.state && location.state.background;\r\n\r\n  return (\r\n    <>\r\n      <Switch location={background || location}>\r\n        <Route path=\"/\" children={<Gallery />} />\r\n      </Switch>\r\n\r\n      {background && <Route path=\"/img/:id\" children={<Modal />} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import Routes from \"./routes\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./global.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//container\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}